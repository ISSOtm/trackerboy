
name: build
on:
  push:
    branches:
      - master
      - develop
    tags-ignore: '**'

env:
  QT_VERSION: 5.12.10

jobs:
  build-linux:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[no build]')"
    strategy:
      fail-fast: false
    steps:

    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y librtmidi-dev

    - uses: lukka/get-cmake@latest

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ env.QT_VERSION }}-QtCache
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{ env.QT_VERSION }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: configure
      run: cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=Release -DENABLE_UNITY
    
    - name: build
      run: cmake --build build --target all
    
    - name: test
      run: |
        cd build
        ctest

  build-windows:
    name: ${{ matrix.arch }}
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[no build]')"
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x64
            qt-arch: win64_msvc2017_64
          - arch: x86
            qt-arch: win32_msvc2017

        
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: lukka/get-cmake@latest

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ matrix.arch }}-${{ env.QT_VERSION }}-QtCache
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        arch: ${{ matrix.qt-arch }}
        version: ${{ env.QT_VERSION }}
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: configure
      run: cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_INSTALLATION_ROOT }}/scripts/buildsystems/vcpkg.cmake" -DENABLE_UNITY=ON
    
    - name: build
      run: cmake --build build --target all

    - name: test
      run: |
        cd build
        ctest
