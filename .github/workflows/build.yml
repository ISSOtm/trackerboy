
# This workflow is inspired by https://github.com/lukka/CppBuildTasks-Validation/blob/master/.github/workflows/hosted-pure-workflow.yml

name: build
on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: macos-latest
            triplet: x64-osx
          - os: ubuntu-latest
            triplet: x64-linux
          - os: windows-latest
            triplet: x64-windows
    env:
      CMAKE_BUILD_DIR: ${{ github.workspace }}/build
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
        
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    
    - name: Install dependencies (Linux)
      # building rtmidi with ALSA support requires libsound2-dev
      if: ${{ runner.os == 'Linux'}}
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev

    - uses: lukka/get-cmake@latest

    # On Windows runners, let's ensure to have the Developer Command Prompt environment setup correctly. As used here the Developer Command Prompt created is targeting x64 and using the default the Windows SDK.
    - uses: ilammy/msvc-dev-cmd@v1

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.12.10
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
    
    - name: configure
      run: |
        cmake -S "${{ github.workspace }}" -B "${{ env.CMAKE_BUILD_DIR }}" -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake" -DENABLE_UNITY=ON
    
    - name: build
      run: cmake --build "${{ env.CMAKE_BUILD_DIR }}"

