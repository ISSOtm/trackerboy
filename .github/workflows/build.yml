
# This workflow is inspired by https://github.com/lukka/CppBuildTasks-Validation/blob/master/.github/workflows/hosted-pure-workflow.yml

name: build
on:
  push:
    branches:
      - master
      - develop
    tags-ignore: '**'

jobs:
  build:
    name: Build (${{ matrix.os }}, ${{ matrix.arch }})
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        # 64-bit: macos, ubuntu and windows
        # 32-bit: windows
        include:
          - os: macos
            arch: x64
            platform: osx
            qt-arch: ''
            
          - os: ubuntu
            arch: x64
            platform: linux
            qt-arch: ''
          
          - os: windows
            arch: x86
            platform: windows
            qt-arch: win32_msvc2017
          
          - os: windows
            arch: x64
            platform: windows
            qt-arch: win64_msvc2017_64
    env:
      CMAKE_BUILD_DIR: ${{ github.workspace }}/build
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      TRIPLET: ${{ matrix.arch }}-${{ matrix.platform }}
        
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    
    - name: Install dependencies (Linux)
      # building rtmidi with ALSA support requires libsound2-dev
      if: ${{ runner.os == 'Linux'}}
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev

    - uses: lukka/get-cmake@latest

    - name: Restore vcpkg
      uses: actions/cache@v2
      with:
        path: |
          ${{ env.CMAKE_BUILD_DIR }}/vcpkg_installed/
          ${{ env.VCPKG_ROOT }}
          !${{ env.VCPKG_ROOT }}/buildtrees
          !${{ env.VCPKG_ROOT }}/packages
          !${{ env.VCPKG_ROOT }}/downloads
        key: |
          ${{ hashFiles( 'vcpkg.json' ) }}-${{ hashFiles( '.git/modules/vcpkg/HEAD' )}}-${{ env.TRIPLET }}-invalidate

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{ matrix.arch }}

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ matrix.arch }}-QtCache
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        arch: ${{ matrix.qt-arch }}
        version: 5.12.10
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
    
    - name: configure
      run: |
        cmake -S "${{ github.workspace }}" -B "${{ env.CMAKE_BUILD_DIR }}" -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake" -DENABLE_UNITY=ON
    
    - name: build
      run: cmake --build "${{ env.CMAKE_BUILD_DIR }}"

    - name: test
      continue-on-error: true
      run: |
        cd "${{ env.CMAKE_BUILD_DIR }}"
        ctest

