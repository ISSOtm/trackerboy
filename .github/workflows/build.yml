
name: build
on:
  push:
    branches:
      - master
      - develop
    tags-ignore: '**'
    paths:
      - 'src/**'
      - 'test/**'
      - 'cmake/**'
      - 'CMakeLists.txt'

env:
  QT_VERSION: 5.12.10

jobs:
  build:
    name: '${{ matrix.os }}, ${{ matrix.arch }}'
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[no build]')"
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            arch: x64
            platform: osx
            qt-arch: ''
          - os: ubuntu-18.04
            arch: x64
            platform: linux
          - os: windows-latest
            arch: x64
            platform: windows
            qt-arch: win64_msvc2017_64
          - os: windows-latest
            arch: x86
            platform: windows
            qt-arch: win32_msvc2017
    steps:
      - uses: actions/checkout@v2

      - uses: lukka/get-cmake@latest

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      
      - name: Install dependencies (linux)
        if: ${{ runner.os == 'Linux' }}
        run: ${{ github.workspace }}/.github/scripts/linuxdeps.sh "${{ github.workspace }}/tools"

      - name: Cache deps
        uses: actions/cache@v2
        with:
          # FetchContent puts all its content in ${CMAKE_BINARY_DIR}/_deps
          # so we can just cache this entire folder
          path: ${{ github.workspace }}/build/_deps
          key: ${{ matrix.os }}-${{ matrix.arch }}-${{ hashFiles('src/dependencies.cmake') }}-deps
     
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ matrix.os }}-${{ matrix.arch }}-${{ env.QT_VERSION }}-QtCache
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          py7zrversion: ==0.16.2  # workaround for windows-x86
          version: ${{ env.QT_VERSION }}
          arch: ${{ matrix.qt-arch }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      
      - name: Configure
        run: cmake -S . -B build -GNinja -DCMAKE_BUILD_TYPE=Release -DENABLE_UNITY=ON -DENABLE_DEPLOYMENT=ON
      
      - name: Build
        run: cmake --build build --target all
      
      - name: Test
        env:
          QT_QPA_PLATFORM: offscreen
        run: |
          cd build
          ctest --output-on-failure

      - name: Deploy
        run: cmake --build build --target deploy

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: trackerboy-nightly-${{ matrix.platform }}-${{ matrix.arch }}
          path: build/src/deploy/
