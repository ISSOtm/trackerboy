
name: Build and deploy

on:
  workflow_call:
    inputs:
      buildType:
        required: true
        type: string
      os:
        required: true
        type: string
      arch:
        required: true
        type: string
      platform:
        required: true
        type: string
      qtArch:
        type: string
      qtVersion:
        required: true
        type: string
    outputs:
      artifactName:
        description: "Name of the upload artifact"
        value: ${{ jobs.buildAndDeploy.outputs.artifactName }}

jobs:
  buildAndDeploy:
    name: Build-${{ inputs.os }}-${{ inputs.arch }}-${{ inputs.buildType }}
    runs-on: ${{ inputs.os }}
    outputs:
      artifactName: ${{ steps.getArtifactName.outputs.name }}
    steps:
      - uses: actions/checkout@v3

      - uses: lukka/get-cmake@latest
      
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ inputs.arch }}
      
      - name: Install dependencies (linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install libasound2-dev
          mkdir tools
          cd tools
          wget https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage -nv -O linuxdeployqt
          chmod a+x linuxdeployqt

      - name: CPM Cache
        id: cache-cpm
        uses: actions/cache@v3
        with:
          path: ~/cpm-cache
          key: ${{ inputs.os }}-${{ inputs.arch }}-cpm-${{ hashFiles('**/') }}
          restore-keys: |
            ${{ inputs.os }}-${{ inputs.arch }}-cpm-
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ inputs.qtVersion }}
          arch: ${{ inputs.qtArch }}
          cache: true
          cache-key-prefix: ${{ inputs.os }}-${{ inputs.arch }}-${{ inputs.qtVersion }}-qt
      
      - name: Configure
        run: |
          cmake -S . -B build -GNinja -DCPM_SOURCE_CACHE=~/cpm-cache -DCMAKE_BUILD_TYPE=${{ inputs.buildType }} -DENABLE_UNITY=ON -DENABLE_DEPLOYMENT=ON
      
      - name: Build
        run: |
          cmake --build build --target all
      
      - name: Test
        env:
          QT_QPA_PLATFORM: offscreen
        run: |
          cd build
          ctest --output-on-failure

      - name: Deploy
        run: cmake --build build --target deploy

      - name: Get artifact name
        id: getArtifactName
        run: echo "name=trackerboy-build-${{ matrix.platform }}-${{ matrix.arch }}" >> $GITHUB_OUTPUT
      
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.getArtifactName.outputs.name }}
          path: build/src/deploy/
