#!/usr/bin/env python3
#
# File: genvibrato.py
#
# Author: stoneface
#
# Usage: genvibrato.py <asm|c>
#
# Generates C/ASM code for the vibrato table (effect 4xy)
#

import math
import sys

class LangAsm(object):

    COMMENT = ";"
    DELIMITER = "\n"

    @classmethod
    def convert(cls, extent, table):
        return "    db {} ; extent = {:3d}".format(", ".join(
            ["${:02X}".format(i) for i in table]
            ), extent)


class LangC(object):

    COMMENT = "//"
    DELIMITER = ",\n"

    @classmethod
    def convert(cls, extent, table):
        return "    /* extent: {:3d} */ {{ {} }}".format(extent, ", ".join(
            ["0x{:02X}".format(i) for i in table]
        ))



EXTENTS = [
         # amplitude (extent) | peak-to-peak (depth)
    1,   # 0.5                | 1
    2,   # 1.5                | 3
    3,   # 2.5                | 5
    4,   # 3.5                | 7
    5,   # 4.5                | 9
    7,   # 6.5                | 13
    10,  # 9.5                | 19
    12,  # 11.5               | 23
    14,  # 13.5               | 27
    17,  # 16.5               | 33
    22,  # 21.5               | 43
    30,  # 29.5               | 59
    44,  # 43.5               | 87
    64,  # 63.5               | 127
    96,  # 95.5               | 191
    127  # 127.5              | 255
]

PERIOD_SIZE = 64


def generateVibratoTable(extent):
    return [int(round(extent * math.sin((i/(PERIOD_SIZE / 2)) * math.pi))) \
            for i in range(PERIOD_SIZE // 4, PERIOD_SIZE // 2)]


def main(lang):
    print("   ", lang.COMMENT, "this table was generated by genvibrato.py")
    print("   ", lang.COMMENT, "$ genvibrato.py", sys.argv[1])

    tableCode = []
    for extent in EXTENTS:
        table = generateVibratoTable(extent)
        tableCode.append(lang.convert(extent, table))

    print(lang.DELIMITER.join(tableCode))



if __name__ == "__main__":

    LANGS = {
        "asm": LangAsm,
        "c" : LangC
    }

    if len(sys.argv) != 2 or sys.argv[1] not in LANGS:
        print("usage: genvibrato.py <asm|c>")
        sys.exit(1)

    lang = LANGS[sys.argv[1]]
    main(lang)

